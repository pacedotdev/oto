// Code generated by oto; DO NOT EDIT.

<%= for (service) in def.Services { %>

    

trait <%= service.Name %>
<%= if (len(service.Embedded) > 0) { %> :
    <%= for (embedded) in service.Embedded { %><%= embedded %><% } %>
<% } %>
{

    <%= for (method) in service.Unique { %>
	fn <%= underscore(method.Name) %>(&<%= method.InputObject.TypeName %>) -> Result<<%= method.OutputObject.TypeName %>>;<% } %>
}
<% } %>

<%= for (object) in def.Objects { %>
#[derive(Serialize, Deserialize)]
struct <%= object.Name %> {<%= for (field) in object.Fields { %>
        <%= field.Name %>:
        <%= if (field.OmitEmpty) { %> Option< <% } %>
            <%= rust_type(field.Type.TypeName) %>
        <%= if (field.OmitEmpty) { %> > <% } %>,
<% } %>}
<% } %>
