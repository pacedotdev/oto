# Code generated by oto; DO NOT EDIT.

import requests
import json


class Client:
	"""Client provides access to the Greeter Service."""

	def __init__(self, endpoint="http://localhost:8080/oto"):
		self.endpoint = endpoint
		if self.endpoint == "":
			raise FieldError(field="endpoint", message="endpoint missing")

			
<%= for (object) in def.Objects { %>class <%= object.Name %>:
	"""<%= format_comment_line(object.Comment) %>"""

	def __init__(self<%= for (field) in object.Fields { %>, <%=field.NameLowerCamel%>:<%= field.Type.PythonType%><% } %>) -> None:
		<%= for (field) in object.Fields { %>self.<%=field.NameLowerCamel%> = <%=field.NameLowerCamel%>  
		<% } %>
<% } %>
<%= for (service) in def.Services { %>class <%= service.Name %>:
	"""<%= format_comment_line(service.Comment) %>"""

	def __init__(self, client):
		self.client = client
	<%= for (method) in service.Methods { %>
	def <%= method.NameLowerCamel %>(self, <%= method.InputObject.ObjectName %>) -> <%=method.OutputObject.ObjectName%>:
		"""<%= format_comment_line(method.Comment) %>"""
		url = "{}/<%= service.Name %>.<%= method.Name %>".format(self.client.endpoint)
		headers = {
			'Accept': 'application/json; charset=utf8',
			'Content-Type': 'application/json; charset=utf8'
		}
		r = requests.post(url, json=<%= method.InputObject.ObjectName %>, headers=headers)
		if r.status_code != 200:
			raise OtoError(message="status code: {}".format(r.status_code))
		j = r.json()
		if 'error' in j:
			err = j.get('error')
			if err != '':
				raise OtoError(message=err)
		return j
	<% } %>
<% } %>

class Error(Exception):
	"""Base class for exceptions in this module."""
	pass


class OtoError(Error):
	"""Exception raised for an error making the request.

	Attributes:
		message -- explanation of the error
	"""

	def __init__(self, message):
		self.message = message


class FieldError(Error):
	"""Exception raised for missing fields.

	Attributes:
		field -- field which the error occurred
		message -- explanation of the error
	"""

	def __init__(self, field, message):
		self.field = field
		self.message = message
