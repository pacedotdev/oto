# Code generated by oto; DO NOT EDIT.

import requests
import json


class Client:
    """Client provides access to the Greeter Service."""

    def __init__(self, endpoint="http://localhost:8080/oto"):
        self.endpoint = endpoint
        if self.endpoint == "":
            raise FieldError(field="endpoint", message="endpoint missing")


class GreetRequest:
    """GreetRequest is the request object for GreeterService.Greet."""

    def __init__(self, name: str, age: int) -> None:
        self.name = name
        self.age = age


class GreetResponse:
    """GreetResponse is the response object containing a person's greeting."""

    def __init__(self, greeting: str, error: str) -> None:
        self.greeting = greeting
        self.error = error


class GreeterService:
    """GreeterService is a polite API for greeting people."""

    def __init__(self, client):
        self.client = client

    def greet(self, GreetRequest) -> GreetResponse:
        """Greet prepares a lovely greeting."""
        url = "{}/GreeterService.Greet".format(self.client.endpoint)
        headers = {
            "Accept": "application/json; charset=utf8",
            "Content-Type": "application/json; charset=utf8",
        }
        r = requests.post(url, json=GreetRequest, headers=headers)
        if r.status_code != 200:
            raise OtoError(message="status code: {}".format(r.status_code))
        j = r.json()
        if "error" in j:
            err = j.get("error")
            if err != "":
                raise OtoError(message=err)
        return j


class Error(Exception):
    """Base class for exceptions in this module."""

    pass


class OtoError(Error):
    """Exception raised for an error making the request.

    Attributes:
            message -- explanation of the error
    """

    def __init__(self, message):
        self.message = message


class FieldError(Error):
    """Exception raised for missing fields.

    Attributes:
            field -- field which the error occurred
            message -- explanation of the error
    """

    def __init__(self, field, message):
        self.field = field
        self.message = message
